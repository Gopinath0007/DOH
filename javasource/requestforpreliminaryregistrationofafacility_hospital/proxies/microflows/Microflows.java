// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package requestforpreliminaryregistrationofafacility_hospital.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the RequestforPreliminaryRegistrationofaFacility_Hospital module
	public static void aCT_Add_Owner(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_Add_Owner").withParams(params).execute(context);
	}
	public static void aCT_Add_Prodetails(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_Add_Prodetails").withParams(params).execute(context);
	}
	public static void aCT_CommitteeChairmanApproval(IContext context, system.proxies.WorkflowUserTask _userTask, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_CommitteeChairmanApproval").withParams(params).execute(context);
	}
	public static void aCT_CommitteeReview(IContext context, system.proxies.WorkflowUserTask _userTask, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_CommitteeReview").withParams(params).execute(context);
	}
	public static void aCT_CreateStaff(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.PharmaService _pharmaService, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("PharmaService", _pharmaService == null ? null : _pharmaService.getMendixObject());
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_CreateStaff").withParams(params).execute(context);
	}
	public static void aCT_DeleteAllImportedServices(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_DeleteAllImportedServices").withParams(params).execute(context);
	}
	public static void aCT_DepartmentManagerApproval(IContext context, system.proxies.WorkflowUserTask _userTask, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_DepartmentManagerApproval").withParams(params).execute(context);
	}
	public static void aCT_DocumentsAdd(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_DocumentsAdd").withParams(params).execute(context);
	}
	public static void aCT_ICMDReview(IContext context, system.proxies.WorkflowUserTask _userTask, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_ICMDReview").withParams(params).execute(context);
	}
	public static void aCT_NextBedsAllocation(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary_)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary_", _preliminary_ == null ? null : _preliminary_.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_NextBedsAllocation").withParams(params).execute(context);
	}
	public static void aCT_NextHospitalDetails(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_NextHospitalDetails").withParams(params).execute(context);
	}
	public static void aCT_ReviewPage(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_ReviewPage").withParams(params).execute(context);
	}
	public static void aCT_SaveFacilityServices(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_SaveFacilityServices").withParams(params).execute(context);
	}
	public static void aCT_SaveNewOwner(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.NewOwner _newOwner)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("NewOwner", _newOwner == null ? null : _newOwner.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_SaveNewOwner").withParams(params).execute(context);
	}
	public static void aCT_SavePayment(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Payment _payment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Payment", _payment == null ? null : _payment.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_SavePayment").withParams(params).execute(context);
	}
	public static void aCT_SavePreliminary(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_SavePreliminary").withParams(params).execute(context);
	}
	public static void aCT_SavePRO_FacultyDetails(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.ProDetails _proDetails)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ProDetails", _proDetails == null ? null : _proDetails.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_SavePRO_FacultyDetails").withParams(params).execute(context);
	}
	public static void aCT_SaveSpeacialities(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Specialities _specialities)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Specialities", _specialities == null ? null : _specialities.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_SaveSpeacialities").withParams(params).execute(context);
	}
	public static void aCT_SelectPharmaDetails(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_SelectPharmaDetails").withParams(params).execute(context);
	}
	public static void aCT_SelectSupportServiceRehab(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.ACT_SelectSupportServiceRehab").withParams(params).execute(context);
	}
	public static void add_specialties(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Add_specialties").withParams(params).execute(context);
	}
	public static void allocate_beds(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Allocate_beds").withParams(params).execute(context);
	}
	public static void cAL_NumberofYearsandDays(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.CAL_NumberofYearsandDays").withParams(params).execute(context);
	}
	public static void delete_specialties(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Prelim_Specialist _prelim_Specialist, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Prelim_Specialist", _prelim_Specialist == null ? null : _prelim_Specialist.getMendixObject());
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Delete_specialties").withParams(params).execute(context);
	}
	public static void dS_DocumentsUpload(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.DS_DocumentsUpload").withParams(params).execute(context);
	}
	public static requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary dS_WorkflowUserTask_GetWorkflowContext(IContext context, system.proxies.WorkflowUserTask _userTask)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.DS_WorkflowUserTask_GetWorkflowContext").withParams(params).execute(context);
		return result == null ? null : requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary.initialize(context, result);
	}
	public static void empty_facility_type_andSubType(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Empty_facility_type_andSubType").withParams(params).execute(context);
	}
	public static void next_Diagonist_services(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Next_Diagonist_services").withParams(params).execute(context);
	}
	public static void next_Medical_vocation(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Next_Medical_vocation").withParams(params).execute(context);
	}
	public static void next_school_clinic_services(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Next_school_clinic_services").withParams(params).execute(context);
	}
	public static void next_show_medical_vocational_page(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Next_show_medical_vocational_page").withParams(params).execute(context);
	}
	public static void next_Show_School_service(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Next_Show_School_service").withParams(params).execute(context);
	}
	public static void nextPage(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.NextPage").withParams(params).execute(context);
	}
	public static void oCH_DiagonistService(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary, requestforpreliminaryregistrationofafacility_hospital.proxies.Servies _servies)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		params.put("Servies", _servies == null ? null : _servies.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.OCH_DiagonistService").withParams(params).execute(context);
	}
	public static void oCH_SelectSupportServiceRehab(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary, requestforpreliminaryregistrationofafacility_hospital.proxies.RehabilitationSubtypes _rehabilitationSubtypes)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		params.put("RehabilitationSubtypes", _rehabilitationSubtypes == null ? null : _rehabilitationSubtypes.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.OCH_SelectSupportServiceRehab").withParams(params).execute(context);
	}
	public static void oCH_SetServices(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary, requestforpreliminaryregistrationofafacility_hospital.proxies.Servies _servies)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		params.put("Servies", _servies == null ? null : _servies.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.OCH_SetServices").withParams(params).execute(context);
	}
	public static void rET_DED_details_from_DED_no(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.RET_DED_details_from_DED_no").withParams(params).execute(context);
	}
	public static java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype> rET_Facilitysubtype(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.RET_Facilitysubtype").withParams(params).execute(context);
		java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype.initialize(context, obj));
		}
		return result;
	}
	public static requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary rET_OwnersAndPros(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.RET_OwnersAndPros").withParams(params).execute(context);
		return result == null ? null : requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary.initialize(context, result);
	}
	public static java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.SubSpecality> rET_SubSpecialties(IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.Prelim_Specialist _prelim_Specialist, requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary _preliminary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Prelim_Specialist", _prelim_Specialist == null ? null : _prelim_Specialist.getMendixObject());
		params.put("Preliminary", _preliminary == null ? null : _preliminary.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.RET_SubSpecialties").withParams(params).execute(context);
		java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.SubSpecality> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(requestforpreliminaryregistrationofafacility_hospital.proxies.SubSpecality.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Medical_Vocation> sub_crea_Prilim_medical_vocation(IContext context, java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Prelim_Specialist> _prelim_Specialist, java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Servies> _servies)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_prelim_Specialist = null;
		if (_prelim_Specialist != null)
		{
			listparam_prelim_Specialist = new java.util.ArrayList<>();
			for (requestforpreliminaryregistrationofafacility_hospital.proxies.Prelim_Specialist obj : _prelim_Specialist)
				listparam_prelim_Specialist.add(obj.getMendixObject());
		}
		params.put("Prelim_Specialist", listparam_prelim_Specialist);

		java.util.ArrayList<IMendixObject> listparam_servies = null;
		if (_servies != null)
		{
			listparam_servies = new java.util.ArrayList<>();
			for (requestforpreliminaryregistrationofafacility_hospital.proxies.Servies obj : _servies)
				listparam_servies.add(obj.getMendixObject());
		}
		params.put("Servies", listparam_servies);

		java.util.List<IMendixObject> objs = Core.microflowCall("RequestforPreliminaryRegistrationofaFacility_Hospital.Sub_crea_Prilim_medical_vocation").withParams(params).execute(context);
		java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Medical_Vocation> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(requestforpreliminaryregistrationofafacility_hospital.proxies.Medical_Vocation.initialize(context, obj));
		}
		return result;
	}
}