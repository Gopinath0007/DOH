// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package requestforpreliminaryregistrationofafacility_hospital.proxies;

public class FacilitySubtype
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject facilitySubtypeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "RequestforPreliminaryRegistrationofaFacility_Hospital.FacilitySubtype";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		FacilitySubtype_FacilityType("RequestforPreliminaryRegistrationofaFacility_Hospital.FacilitySubtype_FacilityType");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public FacilitySubtype(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "RequestforPreliminaryRegistrationofaFacility_Hospital.FacilitySubtype"));
	}

	protected FacilitySubtype(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject facilitySubtypeMendixObject)
	{
		if (facilitySubtypeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("RequestforPreliminaryRegistrationofaFacility_Hospital.FacilitySubtype", facilitySubtypeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a RequestforPreliminaryRegistrationofaFacility_Hospital.FacilitySubtype");

		this.facilitySubtypeMendixObject = facilitySubtypeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'FacilitySubtype.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype(context, mendixObject);
	}

	public static requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype.initialize(context, mendixObject);
	}

	public static java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype> result = new java.util.ArrayList<requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//RequestforPreliminaryRegistrationofaFacility_Hospital.FacilitySubtype" + xpathConstraint))
			result.add(requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of FacilitySubtype_FacilityType
	 */
	public final requestforpreliminaryregistrationofafacility_hospital.proxies.FacilityType getFacilitySubtype_FacilityType() throws com.mendix.core.CoreException
	{
		return getFacilitySubtype_FacilityType(getContext());
	}

	/**
	 * @param context
	 * @return value of FacilitySubtype_FacilityType
	 */
	public final requestforpreliminaryregistrationofafacility_hospital.proxies.FacilityType getFacilitySubtype_FacilityType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		requestforpreliminaryregistrationofafacility_hospital.proxies.FacilityType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.FacilitySubtype_FacilityType.toString());
		if (identifier != null)
			result = requestforpreliminaryregistrationofafacility_hospital.proxies.FacilityType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of FacilitySubtype_FacilityType
	 * @param facilitysubtype_facilitytype
	 */
	public final void setFacilitySubtype_FacilityType(requestforpreliminaryregistrationofafacility_hospital.proxies.FacilityType facilitysubtype_facilitytype)
	{
		setFacilitySubtype_FacilityType(getContext(), facilitysubtype_facilitytype);
	}

	/**
	 * Set value of FacilitySubtype_FacilityType
	 * @param context
	 * @param facilitysubtype_facilitytype
	 */
	public final void setFacilitySubtype_FacilityType(com.mendix.systemwideinterfaces.core.IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.FacilityType facilitysubtype_facilitytype)
	{
		if (facilitysubtype_facilitytype == null)
			getMendixObject().setValue(context, MemberNames.FacilitySubtype_FacilityType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.FacilitySubtype_FacilityType.toString(), facilitysubtype_facilitytype.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return facilitySubtypeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype that = (requestforpreliminaryregistrationofafacility_hospital.proxies.FacilitySubtype) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "RequestforPreliminaryRegistrationofaFacility_Hospital.FacilitySubtype";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
