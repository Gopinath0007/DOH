// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package requestforpreliminaryregistrationofafacility_hospital.proxies;

public class Servies
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject serviesMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "RequestforPreliminaryRegistrationofaFacility_Hospital.Servies";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Selected("Selected"),
		ServiceType("ServiceType"),
		Servies_Preliminary("RequestforPreliminaryRegistrationofaFacility_Hospital.Servies_Preliminary"),
		Preliminary_Diagonist_Servies("RequestforPreliminaryRegistrationofaFacility_Hospital.Preliminary_Diagonist_Servies");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Servies(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "RequestforPreliminaryRegistrationofaFacility_Hospital.Servies"));
	}

	protected Servies(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject serviesMendixObject)
	{
		if (serviesMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("RequestforPreliminaryRegistrationofaFacility_Hospital.Servies", serviesMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a RequestforPreliminaryRegistrationofaFacility_Hospital.Servies");

		this.serviesMendixObject = serviesMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Servies.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static requestforpreliminaryregistrationofafacility_hospital.proxies.Servies initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return requestforpreliminaryregistrationofafacility_hospital.proxies.Servies.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static requestforpreliminaryregistrationofafacility_hospital.proxies.Servies initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new requestforpreliminaryregistrationofafacility_hospital.proxies.Servies(context, mendixObject);
	}

	public static requestforpreliminaryregistrationofafacility_hospital.proxies.Servies load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return requestforpreliminaryregistrationofafacility_hospital.proxies.Servies.initialize(context, mendixObject);
	}

	public static java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Servies> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Servies> result = new java.util.ArrayList<requestforpreliminaryregistrationofafacility_hospital.proxies.Servies>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//RequestforPreliminaryRegistrationofaFacility_Hospital.Servies" + xpathConstraint))
			result.add(requestforpreliminaryregistrationofafacility_hospital.proxies.Servies.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Selected
	 */
	public final java.lang.Boolean getSelected()
	{
		return getSelected(getContext());
	}

	/**
	 * @param context
	 * @return value of Selected
	 */
	public final java.lang.Boolean getSelected(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Selected.toString());
	}

	/**
	 * Set value of Selected
	 * @param selected
	 */
	public final void setSelected(java.lang.Boolean selected)
	{
		setSelected(getContext(), selected);
	}

	/**
	 * Set value of Selected
	 * @param context
	 * @param selected
	 */
	public final void setSelected(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean selected)
	{
		getMendixObject().setValue(context, MemberNames.Selected.toString(), selected);
	}

	/**
	 * Set value of ServiceType
	 * @param servicetype
	 */
	public final requestforpreliminaryregistrationofafacility_hospital.proxies.ENUM_FacilityType getServiceType()
	{
		return getServiceType(getContext());
	}

	/**
	 * @param context
	 * @return value of ServiceType
	 */
	public final requestforpreliminaryregistrationofafacility_hospital.proxies.ENUM_FacilityType getServiceType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ServiceType.toString());
		if (obj == null)
			return null;

		return requestforpreliminaryregistrationofafacility_hospital.proxies.ENUM_FacilityType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ServiceType
	 * @param servicetype
	 */
	public final void setServiceType(requestforpreliminaryregistrationofafacility_hospital.proxies.ENUM_FacilityType servicetype)
	{
		setServiceType(getContext(), servicetype);
	}

	/**
	 * Set value of ServiceType
	 * @param context
	 * @param servicetype
	 */
	public final void setServiceType(com.mendix.systemwideinterfaces.core.IContext context, requestforpreliminaryregistrationofafacility_hospital.proxies.ENUM_FacilityType servicetype)
	{
		if (servicetype != null)
			getMendixObject().setValue(context, MemberNames.ServiceType.toString(), servicetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.ServiceType.toString(), null);
	}

	/**
	 * @return value of Servies_Preliminary
	 */
	public final java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> getServies_Preliminary() throws com.mendix.core.CoreException
	{
		return getServies_Preliminary(getContext());
	}

	/**
	 * @param context
	 * @return value of Servies_Preliminary
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> getServies_Preliminary(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> result = new java.util.ArrayList<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Servies_Preliminary.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Servies_Preliminary
	 * @param servies_preliminary
	 */
	public final void setServies_Preliminary(java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> servies_preliminary)
	{
		setServies_Preliminary(getContext(), servies_preliminary);
	}

	/**
	 * Set value of Servies_Preliminary
	 * @param context
	 * @param servies_preliminary
	 */
	public final void setServies_Preliminary(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> servies_preliminary)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary proxyObject : servies_preliminary)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Servies_Preliminary.toString(), identifiers);
	}

	/**
	 * @return value of Preliminary_Diagonist_Servies
	 */
	public final java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> getPreliminary_Diagonist_Servies() throws com.mendix.core.CoreException
	{
		return getPreliminary_Diagonist_Servies(getContext());
	}

	/**
	 * @param context
	 * @return value of Preliminary_Diagonist_Servies
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> getPreliminary_Diagonist_Servies(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> result = new java.util.ArrayList<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Preliminary_Diagonist_Servies.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Preliminary_Diagonist_Servies
	 * @param preliminary_diagonist_servies
	 */
	public final void setPreliminary_Diagonist_Servies(java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> preliminary_diagonist_servies)
	{
		setPreliminary_Diagonist_Servies(getContext(), preliminary_diagonist_servies);
	}

	/**
	 * Set value of Preliminary_Diagonist_Servies
	 * @param context
	 * @param preliminary_diagonist_servies
	 */
	public final void setPreliminary_Diagonist_Servies(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary> preliminary_diagonist_servies)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (requestforpreliminaryregistrationofafacility_hospital.proxies.Preliminary proxyObject : preliminary_diagonist_servies)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Preliminary_Diagonist_Servies.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return serviesMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final requestforpreliminaryregistrationofafacility_hospital.proxies.Servies that = (requestforpreliminaryregistrationofafacility_hospital.proxies.Servies) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "RequestforPreliminaryRegistrationofaFacility_Hospital.Servies";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
