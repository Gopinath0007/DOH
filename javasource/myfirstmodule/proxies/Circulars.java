// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Circulars
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject circularsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Circulars";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ReferenceNo("ReferenceNo"),
		Subject("Subject"),
		Received_Date("Received_Date"),
		Description("Description"),
		Send_To("Send_To"),
		Sender("Sender"),
		Account("Account"),
		Circulars_Account_2("MyFirstModule.Circulars_Account_2");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Circulars(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.Circulars"));
	}

	protected Circulars(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject circularsMendixObject)
	{
		if (circularsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.Circulars", circularsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.Circulars");

		this.circularsMendixObject = circularsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Circulars.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.Circulars initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Circulars.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.Circulars initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Circulars(context, mendixObject);
	}

	public static myfirstmodule.proxies.Circulars load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Circulars.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Circulars> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.Circulars> result = new java.util.ArrayList<myfirstmodule.proxies.Circulars>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MyFirstModule.Circulars" + xpathConstraint))
			result.add(myfirstmodule.proxies.Circulars.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ReferenceNo
	 */
	public final java.lang.Long getReferenceNo()
	{
		return getReferenceNo(getContext());
	}

	/**
	 * @param context
	 * @return value of ReferenceNo
	 */
	public final java.lang.Long getReferenceNo(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.ReferenceNo.toString());
	}

	/**
	 * Set value of ReferenceNo
	 * @param referenceno
	 */
	public final void setReferenceNo(java.lang.Long referenceno)
	{
		setReferenceNo(getContext(), referenceno);
	}

	/**
	 * Set value of ReferenceNo
	 * @param context
	 * @param referenceno
	 */
	public final void setReferenceNo(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long referenceno)
	{
		getMendixObject().setValue(context, MemberNames.ReferenceNo.toString(), referenceno);
	}

	/**
	 * @return value of Subject
	 */
	public final java.lang.String getSubject()
	{
		return getSubject(getContext());
	}

	/**
	 * @param context
	 * @return value of Subject
	 */
	public final java.lang.String getSubject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Subject.toString());
	}

	/**
	 * Set value of Subject
	 * @param subject
	 */
	public final void setSubject(java.lang.String subject)
	{
		setSubject(getContext(), subject);
	}

	/**
	 * Set value of Subject
	 * @param context
	 * @param subject
	 */
	public final void setSubject(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String subject)
	{
		getMendixObject().setValue(context, MemberNames.Subject.toString(), subject);
	}

	/**
	 * @return value of Received_Date
	 */
	public final java.util.Date getReceived_Date()
	{
		return getReceived_Date(getContext());
	}

	/**
	 * @param context
	 * @return value of Received_Date
	 */
	public final java.util.Date getReceived_Date(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Received_Date.toString());
	}

	/**
	 * Set value of Received_Date
	 * @param received_date
	 */
	public final void setReceived_Date(java.util.Date received_date)
	{
		setReceived_Date(getContext(), received_date);
	}

	/**
	 * Set value of Received_Date
	 * @param context
	 * @param received_date
	 */
	public final void setReceived_Date(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date received_date)
	{
		getMendixObject().setValue(context, MemberNames.Received_Date.toString(), received_date);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of Send_To
	 */
	public final java.lang.String getSend_To()
	{
		return getSend_To(getContext());
	}

	/**
	 * @param context
	 * @return value of Send_To
	 */
	public final java.lang.String getSend_To(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Send_To.toString());
	}

	/**
	 * Set value of Send_To
	 * @param send_to
	 */
	public final void setSend_To(java.lang.String send_to)
	{
		setSend_To(getContext(), send_to);
	}

	/**
	 * Set value of Send_To
	 * @param context
	 * @param send_to
	 */
	public final void setSend_To(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String send_to)
	{
		getMendixObject().setValue(context, MemberNames.Send_To.toString(), send_to);
	}

	/**
	 * @return value of Sender
	 */
	public final java.lang.String getSender()
	{
		return getSender(getContext());
	}

	/**
	 * @param context
	 * @return value of Sender
	 */
	public final java.lang.String getSender(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Sender.toString());
	}

	/**
	 * Set value of Sender
	 * @param sender
	 */
	public final void setSender(java.lang.String sender)
	{
		setSender(getContext(), sender);
	}

	/**
	 * Set value of Sender
	 * @param context
	 * @param sender
	 */
	public final void setSender(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String sender)
	{
		getMendixObject().setValue(context, MemberNames.Sender.toString(), sender);
	}

	/**
	 * @return value of Account
	 */
	public final java.lang.String getAccount()
	{
		return getAccount(getContext());
	}

	/**
	 * @param context
	 * @return value of Account
	 */
	public final java.lang.String getAccount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Account.toString());
	}

	/**
	 * Set value of Account
	 * @param account
	 */
	public final void setAccount(java.lang.String account)
	{
		setAccount(getContext(), account);
	}

	/**
	 * Set value of Account
	 * @param context
	 * @param account
	 */
	public final void setAccount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String account)
	{
		getMendixObject().setValue(context, MemberNames.Account.toString(), account);
	}

	/**
	 * @return value of Circulars_Account_2
	 */
	public final java.util.List<administration.proxies.Account> getCirculars_Account_2() throws com.mendix.core.CoreException
	{
		return getCirculars_Account_2(getContext());
	}

	/**
	 * @param context
	 * @return value of Circulars_Account_2
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<administration.proxies.Account> getCirculars_Account_2(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<administration.proxies.Account> result = new java.util.ArrayList<administration.proxies.Account>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Circulars_Account_2.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(administration.proxies.Account.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Circulars_Account_2
	 * @param circulars_account_2
	 */
	public final void setCirculars_Account_2(java.util.List<administration.proxies.Account> circulars_account_2)
	{
		setCirculars_Account_2(getContext(), circulars_account_2);
	}

	/**
	 * Set value of Circulars_Account_2
	 * @param context
	 * @param circulars_account_2
	 */
	public final void setCirculars_Account_2(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<administration.proxies.Account> circulars_account_2)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (administration.proxies.Account proxyObject : circulars_account_2)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Circulars_Account_2.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return circularsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Circulars that = (myfirstmodule.proxies.Circulars) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.Circulars";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
