// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Count
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject countMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Count";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Approved("Approved"),
		Pending_for_Action("Pending_for_Action"),
		Returned("Returned"),
		draft("draft"),
		inprogress("inprogress"),
		sla("sla");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Count(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.Count"));
	}

	protected Count(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject countMendixObject)
	{
		if (countMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.Count", countMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.Count");

		this.countMendixObject = countMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Count.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.Count initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Count.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.Count initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Count(context, mendixObject);
	}

	public static myfirstmodule.proxies.Count load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Count.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Count> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.Count> result = new java.util.ArrayList<myfirstmodule.proxies.Count>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MyFirstModule.Count" + xpathConstraint))
			result.add(myfirstmodule.proxies.Count.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Approved
	 */
	public final java.lang.Integer getApproved()
	{
		return getApproved(getContext());
	}

	/**
	 * @param context
	 * @return value of Approved
	 */
	public final java.lang.Integer getApproved(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Approved.toString());
	}

	/**
	 * Set value of Approved
	 * @param approved
	 */
	public final void setApproved(java.lang.Integer approved)
	{
		setApproved(getContext(), approved);
	}

	/**
	 * Set value of Approved
	 * @param context
	 * @param approved
	 */
	public final void setApproved(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer approved)
	{
		getMendixObject().setValue(context, MemberNames.Approved.toString(), approved);
	}

	/**
	 * @return value of Pending_for_Action
	 */
	public final java.lang.Integer getPending_for_Action()
	{
		return getPending_for_Action(getContext());
	}

	/**
	 * @param context
	 * @return value of Pending_for_Action
	 */
	public final java.lang.Integer getPending_for_Action(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Pending_for_Action.toString());
	}

	/**
	 * Set value of Pending_for_Action
	 * @param pending_for_action
	 */
	public final void setPending_for_Action(java.lang.Integer pending_for_action)
	{
		setPending_for_Action(getContext(), pending_for_action);
	}

	/**
	 * Set value of Pending_for_Action
	 * @param context
	 * @param pending_for_action
	 */
	public final void setPending_for_Action(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer pending_for_action)
	{
		getMendixObject().setValue(context, MemberNames.Pending_for_Action.toString(), pending_for_action);
	}

	/**
	 * @return value of Returned
	 */
	public final java.lang.Integer getReturned()
	{
		return getReturned(getContext());
	}

	/**
	 * @param context
	 * @return value of Returned
	 */
	public final java.lang.Integer getReturned(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Returned.toString());
	}

	/**
	 * Set value of Returned
	 * @param returned
	 */
	public final void setReturned(java.lang.Integer returned)
	{
		setReturned(getContext(), returned);
	}

	/**
	 * Set value of Returned
	 * @param context
	 * @param returned
	 */
	public final void setReturned(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer returned)
	{
		getMendixObject().setValue(context, MemberNames.Returned.toString(), returned);
	}

	/**
	 * @return value of draft
	 */
	public final java.lang.Integer getdraft()
	{
		return getdraft(getContext());
	}

	/**
	 * @param context
	 * @return value of draft
	 */
	public final java.lang.Integer getdraft(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.draft.toString());
	}

	/**
	 * Set value of draft
	 * @param draft
	 */
	public final void setdraft(java.lang.Integer draft)
	{
		setdraft(getContext(), draft);
	}

	/**
	 * Set value of draft
	 * @param context
	 * @param draft
	 */
	public final void setdraft(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer draft)
	{
		getMendixObject().setValue(context, MemberNames.draft.toString(), draft);
	}

	/**
	 * @return value of inprogress
	 */
	public final java.lang.Integer getinprogress()
	{
		return getinprogress(getContext());
	}

	/**
	 * @param context
	 * @return value of inprogress
	 */
	public final java.lang.Integer getinprogress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.inprogress.toString());
	}

	/**
	 * Set value of inprogress
	 * @param inprogress
	 */
	public final void setinprogress(java.lang.Integer inprogress)
	{
		setinprogress(getContext(), inprogress);
	}

	/**
	 * Set value of inprogress
	 * @param context
	 * @param inprogress
	 */
	public final void setinprogress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer inprogress)
	{
		getMendixObject().setValue(context, MemberNames.inprogress.toString(), inprogress);
	}

	/**
	 * @return value of sla
	 */
	public final java.lang.Integer getsla()
	{
		return getsla(getContext());
	}

	/**
	 * @param context
	 * @return value of sla
	 */
	public final java.lang.Integer getsla(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.sla.toString());
	}

	/**
	 * Set value of sla
	 * @param sla
	 */
	public final void setsla(java.lang.Integer sla)
	{
		setsla(getContext(), sla);
	}

	/**
	 * Set value of sla
	 * @param context
	 * @param sla
	 */
	public final void setsla(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer sla)
	{
		getMendixObject().setValue(context, MemberNames.sla.toString(), sla);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return countMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Count that = (myfirstmodule.proxies.Count) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.Count";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
