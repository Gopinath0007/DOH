// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package audittrail.proxies;

public class Log
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject logMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AuditTrail.Log";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		LogObject("LogObject"),
		DateTime("DateTime"),
		NumberOfChangedMembers("NumberOfChangedMembers"),
		LogType("LogType"),
		ReferenceId("ReferenceId"),
		Description("Description"),
		Log_AudittrailSuperClass("AuditTrail.Log_AudittrailSuperClass"),
		Log_User("AuditTrail.Log_User"),
		Log_excel_("AuditTrail.Log_excel_");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Log(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "AuditTrail.Log"));
	}

	protected Log(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject logMendixObject)
	{
		if (logMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("AuditTrail.Log", logMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a AuditTrail.Log");

		this.logMendixObject = logMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Log.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static audittrail.proxies.Log initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return audittrail.proxies.Log.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static audittrail.proxies.Log initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new audittrail.proxies.Log(context, mendixObject);
	}

	public static audittrail.proxies.Log load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return audittrail.proxies.Log.initialize(context, mendixObject);
	}

	public static java.util.List<audittrail.proxies.Log> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<audittrail.proxies.Log> result = new java.util.ArrayList<audittrail.proxies.Log>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//AuditTrail.Log" + xpathConstraint))
			result.add(audittrail.proxies.Log.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of LogObject
	 */
	public final java.lang.String getLogObject()
	{
		return getLogObject(getContext());
	}

	/**
	 * @param context
	 * @return value of LogObject
	 */
	public final java.lang.String getLogObject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LogObject.toString());
	}

	/**
	 * Set value of LogObject
	 * @param logobject
	 */
	public final void setLogObject(java.lang.String logobject)
	{
		setLogObject(getContext(), logobject);
	}

	/**
	 * Set value of LogObject
	 * @param context
	 * @param logobject
	 */
	public final void setLogObject(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String logobject)
	{
		getMendixObject().setValue(context, MemberNames.LogObject.toString(), logobject);
	}

	/**
	 * @return value of DateTime
	 */
	public final java.util.Date getDateTime()
	{
		return getDateTime(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTime
	 */
	public final java.util.Date getDateTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTime.toString());
	}

	/**
	 * Set value of DateTime
	 * @param datetime
	 */
	public final void setDateTime(java.util.Date datetime)
	{
		setDateTime(getContext(), datetime);
	}

	/**
	 * Set value of DateTime
	 * @param context
	 * @param datetime
	 */
	public final void setDateTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetime)
	{
		getMendixObject().setValue(context, MemberNames.DateTime.toString(), datetime);
	}

	/**
	 * @return value of NumberOfChangedMembers
	 */
	public final java.lang.Integer getNumberOfChangedMembers()
	{
		return getNumberOfChangedMembers(getContext());
	}

	/**
	 * @param context
	 * @return value of NumberOfChangedMembers
	 */
	public final java.lang.Integer getNumberOfChangedMembers(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.NumberOfChangedMembers.toString());
	}

	/**
	 * Set value of NumberOfChangedMembers
	 * @param numberofchangedmembers
	 */
	public final void setNumberOfChangedMembers(java.lang.Integer numberofchangedmembers)
	{
		setNumberOfChangedMembers(getContext(), numberofchangedmembers);
	}

	/**
	 * Set value of NumberOfChangedMembers
	 * @param context
	 * @param numberofchangedmembers
	 */
	public final void setNumberOfChangedMembers(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer numberofchangedmembers)
	{
		getMendixObject().setValue(context, MemberNames.NumberOfChangedMembers.toString(), numberofchangedmembers);
	}

	/**
	 * Set value of LogType
	 * @param logtype
	 */
	public final audittrail.proxies.TypeOfLog getLogType()
	{
		return getLogType(getContext());
	}

	/**
	 * @param context
	 * @return value of LogType
	 */
	public final audittrail.proxies.TypeOfLog getLogType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.LogType.toString());
		if (obj == null)
			return null;

		return audittrail.proxies.TypeOfLog.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of LogType
	 * @param logtype
	 */
	public final void setLogType(audittrail.proxies.TypeOfLog logtype)
	{
		setLogType(getContext(), logtype);
	}

	/**
	 * Set value of LogType
	 * @param context
	 * @param logtype
	 */
	public final void setLogType(com.mendix.systemwideinterfaces.core.IContext context, audittrail.proxies.TypeOfLog logtype)
	{
		if (logtype != null)
			getMendixObject().setValue(context, MemberNames.LogType.toString(), logtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.LogType.toString(), null);
	}

	/**
	 * @return value of ReferenceId
	 */
	public final java.lang.String getReferenceId()
	{
		return getReferenceId(getContext());
	}

	/**
	 * @param context
	 * @return value of ReferenceId
	 */
	public final java.lang.String getReferenceId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ReferenceId.toString());
	}

	/**
	 * Set value of ReferenceId
	 * @param referenceid
	 */
	public final void setReferenceId(java.lang.String referenceid)
	{
		setReferenceId(getContext(), referenceid);
	}

	/**
	 * Set value of ReferenceId
	 * @param context
	 * @param referenceid
	 */
	public final void setReferenceId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String referenceid)
	{
		getMendixObject().setValue(context, MemberNames.ReferenceId.toString(), referenceid);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of Log_AudittrailSuperClass
	 */
	public final audittrail.proxies.AudittrailSuperClass getLog_AudittrailSuperClass() throws com.mendix.core.CoreException
	{
		return getLog_AudittrailSuperClass(getContext());
	}

	/**
	 * @param context
	 * @return value of Log_AudittrailSuperClass
	 */
	public final audittrail.proxies.AudittrailSuperClass getLog_AudittrailSuperClass(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		audittrail.proxies.AudittrailSuperClass result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Log_AudittrailSuperClass.toString());
		if (identifier != null)
			result = audittrail.proxies.AudittrailSuperClass.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Log_AudittrailSuperClass
	 * @param log_audittrailsuperclass
	 */
	public final void setLog_AudittrailSuperClass(audittrail.proxies.AudittrailSuperClass log_audittrailsuperclass)
	{
		setLog_AudittrailSuperClass(getContext(), log_audittrailsuperclass);
	}

	/**
	 * Set value of Log_AudittrailSuperClass
	 * @param context
	 * @param log_audittrailsuperclass
	 */
	public final void setLog_AudittrailSuperClass(com.mendix.systemwideinterfaces.core.IContext context, audittrail.proxies.AudittrailSuperClass log_audittrailsuperclass)
	{
		if (log_audittrailsuperclass == null)
			getMendixObject().setValue(context, MemberNames.Log_AudittrailSuperClass.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Log_AudittrailSuperClass.toString(), log_audittrailsuperclass.getMendixObject().getId());
	}

	/**
	 * @return value of Log_User
	 */
	public final system.proxies.User getLog_User() throws com.mendix.core.CoreException
	{
		return getLog_User(getContext());
	}

	/**
	 * @param context
	 * @return value of Log_User
	 */
	public final system.proxies.User getLog_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Log_User.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Log_User
	 * @param log_user
	 */
	public final void setLog_User(system.proxies.User log_user)
	{
		setLog_User(getContext(), log_user);
	}

	/**
	 * Set value of Log_User
	 * @param context
	 * @param log_user
	 */
	public final void setLog_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User log_user)
	{
		if (log_user == null)
			getMendixObject().setValue(context, MemberNames.Log_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Log_User.toString(), log_user.getMendixObject().getId());
	}

	/**
	 * @return value of Log_excel_
	 */
	public final myfirstmodule.proxies.excel_ getLog_excel_() throws com.mendix.core.CoreException
	{
		return getLog_excel_(getContext());
	}

	/**
	 * @param context
	 * @return value of Log_excel_
	 */
	public final myfirstmodule.proxies.excel_ getLog_excel_(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.excel_ result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Log_excel_.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.excel_.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Log_excel_
	 * @param log_excel_
	 */
	public final void setLog_excel_(myfirstmodule.proxies.excel_ log_excel_)
	{
		setLog_excel_(getContext(), log_excel_);
	}

	/**
	 * Set value of Log_excel_
	 * @param context
	 * @param log_excel_
	 */
	public final void setLog_excel_(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.excel_ log_excel_)
	{
		if (log_excel_ == null)
			getMendixObject().setValue(context, MemberNames.Log_excel_.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Log_excel_.toString(), log_excel_.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return logMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final audittrail.proxies.Log that = (audittrail.proxies.Log) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "AuditTrail.Log";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
